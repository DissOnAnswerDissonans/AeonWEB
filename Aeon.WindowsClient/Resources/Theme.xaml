<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style x:Key="BaseText">
    <Setter Property="Control.FontFamily" Value="Trebuchet MS"/>
    <Setter Property="Control.FontSize" Value="20"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
  </Style>

  <Style x:Key="BaseBorder" TargetType="Border">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource DisabledElement}"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="BorderThickness" Value="2"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
    <Setter Property="CornerRadius" Value="5"/>
    <Setter Property="Background" Value="{StaticResource Element}"/>
  </Style>

  <Style x:Key="ActiveBorder" TargetType="Border" BasedOn="{StaticResource BaseBorder}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource ActiveElement}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="BaseBox" TargetType="Control" BasedOn="{StaticResource BaseText}">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource DisabledElement}"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource Element}"/>
    <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
  </Style>

  <Style TargetType="TextBlock" BasedOn="{StaticResource BaseText}">
    <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
  </Style>

  <Style x:Key="TextBoxBase" TargetType="{x:Type TextBoxBase}"
         BasedOn="{StaticResource BaseBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border Style="{StaticResource BaseBorder}">
            <ScrollViewer x:Name="PART_ContentHost"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBase}"/>
  <Style TargetType="{x:Type PasswordBox}"
         BasedOn="{StaticResource BaseBox}">
    <Setter Property="OverridesDefaultStyle" Value="False" />
    <Setter Property="PasswordChar" Value="●" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <Border Background="{StaticResource Element}"
                  CornerRadius="5" BorderThickness="2"
                  BorderBrush="{StaticResource BorderColor}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer x:Name="PART_ContentHost" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonBase" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border" Style="{StaticResource ActiveBorder}" Background="{TemplateBinding Background}">
            <ContentPresenter 
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              RecognizesAccessKey="True"
              Margin="{TemplateBinding Padding}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
            />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="Button" BasedOn="{StaticResource ButtonBase}"/>
  <Style TargetType="ToggleButton" BasedOn="{StaticResource ButtonBase}"/>
  <Style TargetType="RibbonButton" BasedOn="{StaticResource ButtonBase}"/>

  <Style TargetType="ListBox" BasedOn="{StaticResource BaseBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBox">
          <Border Style="{StaticResource BaseBorder}" Background="{TemplateBinding Background}" Padding="2"
                  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
              <StackPanel IsItemsHost="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ListBoxItem" BasedOn="{StaticResource BaseBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Border x:Name="Border" Style="{StaticResource ActiveBorder}" Margin="1" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="SelectionStates">
                <VisualState Name="Unselected"/>
                <VisualState Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames 
                      Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SelectedItem}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ScrollBar" BasedOn="{StaticResource BaseBox}"/>

  <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
    <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
  </ControlTemplate>

  <Style TargetType="ComboBox" BasedOn="{StaticResource BaseBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <ToggleButton x:Name="ToggleButton" ClickMode="Press"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter x:Name="ContentSite" Margin="5 0 20 0" IsHitTestVisible="False" 
                              VerticalAlignment="Center" HorizontalAlignment="Left" 
                              Content="{TemplateBinding SelectedItem}" 
                              ContentTemplate="{TemplateBinding ItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
            <TextBox x:Name="PART_EditableTextBox" Margin="5 0 20 0" 
                     Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
            <Popup x:Name="Popup" Placement="Relative" IsOpen="{TemplateBinding IsDropDownOpen}" 
                   AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" HorizontalAlignment="Stretch">
              <Grid Margin="5 0" MinWidth="{TemplateBinding ActualWidth}">
                <StackPanel IsItemsHost="True" />
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ComboBoxItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Border x:Name="Border" Style="{StaticResource ActiveBorder}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
</ResourceDictionary>